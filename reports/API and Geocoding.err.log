Traceback (most recent call last):
  File "C:\Users\mtint\anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\mtint\anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\mtint\anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\mtint\anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\mtint\anaconda3\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\mtint\anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\mtint\anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\mtint\anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
data_lima_final["COORDENADAS"] = data_lima_final.apply( lambda x: get_results( gmaps.geocode( x["DIRECCION COMPLETA"], region = "PE") ), axis = 1 )
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mApiError[0m                                  Traceback (most recent call last)
[1;32m~\AppData\Local\Temp\ipykernel_16876\2788067092.py[0m in [0;36m<module>[1;34m[0m
[1;32m----> 1[1;33m [0mdata_lima_final[0m[1;33m[[0m[1;34m"COORDENADAS"[0m[1;33m][0m [1;33m=[0m [0mdata_lima_final[0m[1;33m.[0m[0mapply[0m[1;33m([0m [1;32mlambda[0m [0mx[0m[1;33m:[0m [0mget_results[0m[1;33m([0m [0mgmaps[0m[1;33m.[0m[0mgeocode[0m[1;33m([0m [0mx[0m[1;33m[[0m[1;34m"DIRECCION COMPLETA"[0m[1;33m][0m[1;33m,[0m [0mregion[0m [1;33m=[0m [1;34m"PE"[0m[1;33m)[0m [1;33m)[0m[1;33m,[0m [0maxis[0m [1;33m=[0m [1;36m1[0m [1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m
[1;32m~\anaconda3\lib\site-packages\pandas\core\frame.py[0m in [0;36mapply[1;34m(self, func, axis, raw, result_type, args, **kwargs)[0m
[0;32m   8846[0m             [0mkwargs[0m[1;33m=[0m[0mkwargs[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m   8847[0m         )
[1;32m-> 8848[1;33m         [1;32mreturn[0m [0mop[0m[1;33m.[0m[0mapply[0m[1;33m([0m[1;33m)[0m[1;33m.[0m[0m__finalize__[0m[1;33m([0m[0mself[0m[1;33m,[0m [0mmethod[0m[1;33m=[0m[1;34m"apply"[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   8849[0m [1;33m[0m[0m
[0;32m   8850[0m     def applymap(

[1;32m~\anaconda3\lib\site-packages\pandas\core\apply.py[0m in [0;36mapply[1;34m(self)[0m
[0;32m    731[0m             [1;32mreturn[0m [0mself[0m[1;33m.[0m[0mapply_raw[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    732[0m [1;33m[0m[0m
[1;32m--> 733[1;33m         [1;32mreturn[0m [0mself[0m[1;33m.[0m[0mapply_standard[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    734[0m [1;33m[0m[0m
[0;32m    735[0m     [1;32mdef[0m [0magg[0m[1;33m([0m[0mself[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\pandas\core\apply.py[0m in [0;36mapply_standard[1;34m(self)[0m
[0;32m    855[0m [1;33m[0m[0m
[0;32m    856[0m     [1;32mdef[0m [0mapply_standard[0m[1;33m([0m[0mself[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 857[1;33m         [0mresults[0m[1;33m,[0m [0mres_index[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0mapply_series_generator[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    858[0m [1;33m[0m[0m
[0;32m    859[0m         [1;31m# wrap results[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\pandas\core\apply.py[0m in [0;36mapply_series_generator[1;34m(self)[0m
[0;32m    871[0m             [1;32mfor[0m [0mi[0m[1;33m,[0m [0mv[0m [1;32min[0m [0menumerate[0m[1;33m([0m[0mseries_gen[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    872[0m                 [1;31m# ignore SettingWithCopy here in case the user mutates[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 873[1;33m                 [0mresults[0m[1;33m[[0m[0mi[0m[1;33m][0m [1;33m=[0m [0mself[0m[1;33m.[0m[0mf[0m[1;33m([0m[0mv[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    874[0m                 [1;32mif[0m [0misinstance[0m[1;33m([0m[0mresults[0m[1;33m[[0m[0mi[0m[1;33m][0m[1;33m,[0m [0mABCSeries[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    875[0m                     [1;31m# If we have a view on v, we need to make a copy because[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Temp\ipykernel_16876\2788067092.py[0m in [0;36m<lambda>[1;34m(x)[0m
[1;32m----> 1[1;33m [0mdata_lima_final[0m[1;33m[[0m[1;34m"COORDENADAS"[0m[1;33m][0m [1;33m=[0m [0mdata_lima_final[0m[1;33m.[0m[0mapply[0m[1;33m([0m [1;32mlambda[0m [0mx[0m[1;33m:[0m [0mget_results[0m[1;33m([0m [0mgmaps[0m[1;33m.[0m[0mgeocode[0m[1;33m([0m [0mx[0m[1;33m[[0m[1;34m"DIRECCION COMPLETA"[0m[1;33m][0m[1;33m,[0m [0mregion[0m [1;33m=[0m [1;34m"PE"[0m[1;33m)[0m [1;33m)[0m[1;33m,[0m [0maxis[0m [1;33m=[0m [1;36m1[0m [1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m
[1;32m~\anaconda3\lib\site-packages\googlemaps\client.py[0m in [0;36mwrapper[1;34m(*args, **kwargs)[0m
[0;32m    443[0m     [1;32mdef[0m [0mwrapper[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    444[0m         [0margs[0m[1;33m[[0m[1;36m0[0m[1;33m][0m[1;33m.[0m[0m_extra_params[0m [1;33m=[0m [0mkwargs[0m[1;33m.[0m[0mpop[0m[1;33m([0m[1;34m"extra_params"[0m[1;33m,[0m [1;32mNone[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 445[1;33m         [0mresult[0m [1;33m=[0m [0mfunc[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    446[0m         [1;32mtry[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    447[0m             [1;32mdel[0m [0margs[0m[1;33m[[0m[1;36m0[0m[1;33m][0m[1;33m.[0m[0m_extra_params[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\googlemaps\geocoding.py[0m in [0;36mgeocode[1;34m(client, address, place_id, components, bounds, region, language)[0m
[0;32m     73[0m         [0mparams[0m[1;33m[[0m[1;34m"language"[0m[1;33m][0m [1;33m=[0m [0mlanguage[0m[1;33m[0m[1;33m[0m[0m
[0;32m     74[0m [1;33m[0m[0m
[1;32m---> 75[1;33m     [1;32mreturn[0m [0mclient[0m[1;33m.[0m[0m_request[0m[1;33m([0m[1;34m"/maps/api/geocode/json"[0m[1;33m,[0m [0mparams[0m[1;33m)[0m[1;33m.[0m[0mget[0m[1;33m([0m[1;34m"results"[0m[1;33m,[0m [1;33m[[0m[1;33m][0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     76[0m [1;33m[0m[0m
[0;32m     77[0m [1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\googlemaps\client.py[0m in [0;36m_request[1;34m(self, url, params, first_request_time, retry_counter, base_url, accepts_clientid, extract_body, requests_kwargs, post_json)[0m
[0;32m    338[0m                 [0mresult[0m [1;33m=[0m [0mextract_body[0m[1;33m([0m[0mresponse[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    339[0m             [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 340[1;33m                 [0mresult[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_get_body[0m[1;33m([0m[0mresponse[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    341[0m             [0mself[0m[1;33m.[0m[0msent_times[0m[1;33m.[0m[0mappend[0m[1;33m([0m[0mtime[0m[1;33m.[0m[0mtime[0m[1;33m([0m[1;33m)[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    342[0m             [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\googlemaps\client.py[0m in [0;36m_get_body[1;34m(self, response)[0m
[0;32m    367[0m                 api_status, body.get("error_message"))
[0;32m    368[0m [1;33m[0m[0m
[1;32m--> 369[1;33m         raise googlemaps.exceptions.ApiError(api_status,
[0m[0;32m    370[0m                                              body.get("error_message"))
[0;32m    371[0m [1;33m[0m[0m

[1;31mApiError[0m: REQUEST_DENIED (You must enable Billing on the Google Cloud Project at https://console.cloud.google.com/project/_/billing/enable Learn more at https://developers.google.com/maps/gmp-get-started)
ApiError: REQUEST_DENIED (You must enable Billing on the Google Cloud Project at https://console.cloud.google.com/project/_/billing/enable Learn more at https://developers.google.com/maps/gmp-get-started)

